BROKER SCHEMA putChangedSubscriptionOrderDelivery


CREATE COMPUTE MODULE esqlPrepareOIZ163MIUpdInstLineF
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN		
		SET OutputLocalEnvironment = InputLocalEnvironment;
		
		DECLARE M3BaseUrl CHARACTER Environment.Variables.Global.UDP.M3BaseUrl;
		DECLARE orderLineRef REFERENCE TO InputLocalEnvironment.Variables.CurrentOrderLine;
		SET OutputLocalEnvironment.Destination.HTTP.RequestURL = M3BaseUrl || 'OIZ163MI/UpdInstLine';
				
		SET OutputLocalEnvironment.Destination.HTTP.QueryString.CONO = Environment.Variables.Global.OriginRequest.ns:companyNumber;
		SET OutputLocalEnvironment.Destination.HTTP.QueryString.ITNO = orderLineRef.ns:sku;
		SET OutputLocalEnvironment.Destination.HTTP.QueryString.RORD = Environment.Variables.Global.OriginRequest.ns:orderNumber;
		IF orderLineRef.ns:orderLineUnit = 'D' AND EXISTS(InputLocalEnvironment.Variables.DPakQuantity[]) THEN
			SET OutputLocalEnvironment.Destination.HTTP.QueryString.ORQT = InputLocalEnvironment.Variables.DPakQuantity;
		ELSE 
			SET OutputLocalEnvironment.Destination.HTTP.QueryString.ORQT = orderLineRef.ns:quantity;
		END IF;
		SET OutputLocalEnvironment.Destination.HTTP.QueryString.ROLN = InputLocalEnvironment.Variables.OrderLineNumber;	
		SET OutputLocalEnvironment.Destination.HTTP.QueryString.FDAT = Environment.Variables.Global.OriginRequest.ns:deliveryDate;
		
		RETURN TRUE;
	END;
END MODULE;
