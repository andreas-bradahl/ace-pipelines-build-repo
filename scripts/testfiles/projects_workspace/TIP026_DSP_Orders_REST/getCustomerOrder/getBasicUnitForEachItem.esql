BROKER SCHEMA getCustomerOrder


CREATE COMPUTE MODULE getBasicUnitForEachItem
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE lstLine2Ref REFERENCE TO Environment.Variables.HTTPResponses.LstLine2;
		DECLARE varRef REFERENCE TO Environment.Variables.Global;
		DECLARE itemIndex INT 0;
		
		DECLARE priceList CHARACTER Environment.Variables.SQLQueries.PriceList.value;
		DECLARE currency CHARACTER Environment.Variables.SQLQueries.Currency.value;
		DECLARE itemClass CHARACTER Environment.Variables.SQLQueries.ItemClass.value;	
		
		DECLARE currentDate CHARACTER CAST(CURRENT_DATE AS CHARACTER FORMAT 'yyyyMMdd');
		
		DECLARE sku CHARACTER;
		
		DECLARE lstLine2Cursor REFERENCE TO Environment.Variables.HTTPResponses.LstLine2.Item;
		
		WHILE LASTMOVE(lstLine2Cursor) DO	
			
			SET sku = lstLine2Cursor.ITNO;
			
			DECLARE sqlQueryBuyableInBaseUnit CHAR ' 
				SELECT ODITNO
				FROM OPRBAS 
				WHERE 
						ODCONO = 100 
					AND ODITNO = ?
				    AND ODPRRF = ?
				    AND ODCUCD = ?
				    AND ODFVDT <= ?
				    AND ODLVDT >= ?
			';
				
			SET Environment.Variables.SQLQueries.BuyableInBaseUnit = PASSTHRU(sqlQueryBuyableInBaseUnit, sku, priceList, currency, currentDate, currentDate);	
	
			IF Environment.Variables.SQLQueries.BuyableInBaseUnit.ODITNO IS NOT NULL THEN	
				CREATE LASTCHILD OF lstLine2Cursor NAME 'buyableInBaseUnit' VALUE TRUE;
			ELSE		
				CREATE LASTCHILD OF lstLine2Cursor NAME 'buyableInBaseUnit' VALUE FALSE;		
			END IF;
			
			SET itemIndex = itemIndex + 1;
			SET varRef.ItemIndex = itemIndex;
			SET OutputLocalEnvironment.Destination.HTTP.QueryString.CONO = varRef.company_number;
			SET OutputLocalEnvironment.Destination.HTTP.QueryString.ITNO = sku;
			
			PROPAGATE TO terminal 'out1';
			
			MOVE lstLine2Cursor NEXTSIBLING REPEAT NAME;
		END WHILE;
		
		DELETE FIELD varRef.ItemIndex;
		
		
		RETURN TRUE;
	END;
END MODULE;
