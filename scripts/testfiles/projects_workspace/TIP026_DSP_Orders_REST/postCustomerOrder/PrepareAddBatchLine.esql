BROKER SCHEMA postCustomerOrder


CREATE COMPUTE MODULE PrepareAddBatchLine
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		--SET OutputLocalEnvironment = InputLocalEnvironment;
		
		DECLARE varRef REFERENCE TO Environment.Variables;
		DECLARE orderRef, orderLineCursor REFERENCE TO Environment.OrderRequest.Data;
		DECLARE getPriceLineRef REFERENCE TO Environment.JSONResponse.GetPriceLine;
		DECLARE getPriceLineNameValueList REFERENCE TO getPriceLineRef.Data.MIRecord.Item.NameValue;
		DECLARE addBatchHeadNameValueList REFERENCE TO Environment.JSONResponse.AddBatchHead.Data.MIRecord.Item.NameValue;
		DECLARE ORNO CHAR GetValueFromNameValueList('ORNO', addBatchHeadNameValueList);
		DECLARE orderLineIndex INT varRef.orderLineCursorIndex;
		
		MOVE orderLineCursor FIRSTCHILD NAME 'orderLines';
		MOVE orderLineCursor TO orderLineCursor.Item[orderLineIndex];
		
		SET OutputLocalEnvironment.Destination.HTTP.QueryString.ORNO = ORNO;
		SET OutputLocalEnvironment.Destination.HTTP.QueryString.ITNO = orderLineCursor.sku;
		SET OutputLocalEnvironment.Destination.HTTP.QueryString.ORQT = orderLineCursor.quantity;
		SET OutputLocalEnvironment.Destination.HTTP.QueryString.DIP1 = orderLineCursor.discountLine1;
		SET OutputLocalEnvironment.Destination.HTTP.QueryString.DIP2 = orderLineCursor.discountLine2;
		SET OutputLocalEnvironment.Destination.HTTP.QueryString.DIP3 = orderLineCursor.discountLine3;
		SET OutputLocalEnvironment.Destination.HTTP.QueryString.DIP4 = orderLineCursor.discountLine4;
		SET OutputLocalEnvironment.Destination.HTTP.QueryString.DIP5 = orderLineCursor.discountLine5;
		SET OutputLocalEnvironment.Destination.HTTP.QueryString.DIP6 = orderLineCursor.discountLine6;
		SET OutputLocalEnvironment.Destination.HTTP.QueryString.ALUN = orderLineCursor.orderLineUnit;
		
		IF varRef.isLostSales = 1 THEN
			
			DECLARE LNAM DECIMAL CAST((GetValueFromNameValueList('LNAM', getPriceLineNameValueList)) AS DECIMAL);
			DECLARE DIA6 DECIMAL CAST((GetValueFromNameValueList('DIA6', getPriceLineNameValueList)) AS DECIMAL);
			DECLARE quantity DECIMAL CAST(orderLineCursor.quantity AS DECIMAL);
			
			DECLARE salesPriceLostSales DECIMAL (LNAM + DIA6) / quantity;
			DECLARE realNumber CHARACTER SUBSTRING(CAST(salesPriceLostSales AS CHARACTER) BEFORE '.');
			DECLARE percision CHARACTER LEFT(SUBSTRING(CAST(salesPriceLostSales AS CHARACTER) AFTER '.'), 2);
			
			SET OutputLocalEnvironment.Destination.HTTP.QueryString.LSLS = '1';
			SET OutputLocalEnvironment.Destination.HTTP.QueryString.LNAM = LNAM;
			SET OutputLocalEnvironment.Destination.HTTP.QueryString.DIA6 = DIA6;
			SET OutputLocalEnvironment.Destination.HTTP.QueryString.SAPR = realNumber || '.' || percision;
			SET OutputLocalEnvironment.Destination.HTTP.QueryString.SPUN = GetValueFromNameValueList('SPUN', getPriceLineNameValueList);
			SET OutputLocalEnvironment.Destination.HTTP.QueryString.WHLO = orderLineCursor.lostSalesWarehouse;
			SET OutputLocalEnvironment.Destination.HTTP.QueryString.DRDN = orderLineCursor.lostSalesUniqueId;
			
		END IF;
		
		
		RETURN TRUE;
	END;
END MODULE;