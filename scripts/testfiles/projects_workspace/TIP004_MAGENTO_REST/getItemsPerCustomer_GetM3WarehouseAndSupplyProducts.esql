

CREATE DATABASE MODULE getItemsPerCustomer_GetM3WarehouseAndSupplyProducts
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE customerRef REFERENCE TO Environment.Variables.UserInfo.Row;
		DECLARE warehouseItemsQuery CHAR;
		SET warehouseItemsQuery = 
			'(SELECT 
			TRIM(MMITNO) AS ITNO
			FROM MITMAS
			INNER JOIN MITBAL
				ON MBCONO = MMCONO
				AND MMITNO = MBITNO
				AND MBWHLO = ?
				AND MBSTAT >= ''20''
				AND MBSTAT <= ''50''
			INNER JOIN OCUSMA
				ON OKCONO = MMCONO
				AND OKWHLO = MBWHLO
				AND OKCUNO = ?
			WHERE MMCONO = ?
				AND MMSTAT >= ''20''
				AND MMSTAT < ''80''
				AND SUBSTRING(MMSPE2, CAST(? AS INT), 1)= ''1'')';
		
		CREATE FIELD Environment.Variables.ProductData; -- .Warehouse.NoACHK;
		DECLARE m3Ref REFERENCE TO Environment.Variables.ProductData;
		SET m3Ref.Item[] =
				PASSTHRU(warehouseItemsQuery 
				VALUES (
					customerRef.OKWHLO, 
					customerRef.OKCUNO, 
					customerRef.OKCONO, 
					customerRef.SalesChannelNumber
				));
		--LOG EVENT SEVERITY 1 VALUES(BrokerName, BrokerVersion, NodeLabel, 'Line 36', 'Query was : ' || warehouseItemsQuery);		
		--DECLARE count INT CARDINALITY(Environment.Variables.Customer.Items.Item[]);
		DECLARE count INT CARDINALITY(Environment.Variables.Customer.Items.Item[]);
		SET Environment.Variables.Items.Cardinality= count;
		--LOG EVENT SEVERITY 1 VALUES(BrokerName, BrokerVersion, NodeLabel, 'Line 39', 'Count was : ' || CAST(count AS CHAR));
		RETURN TRUE;
	END;

END MODULE;
