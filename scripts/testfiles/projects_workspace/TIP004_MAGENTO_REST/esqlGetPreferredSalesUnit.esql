

CREATE COMPUTE MODULE esqlGetPreferredSalesUnit
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		
		SET OutputRoot.JSON.Data = InputRoot.JSON.Data;
		DECLARE skuRef CHAR;
		DECLARE baseUnit CHAR;
		DECLARE salesUnit CHAR;
		SET skuRef = Environment.Variables.getItemsRequestEnvironment.itemsRequest.sku;
		--SET baseUnit = Environment.Variables.getItemsRequestEnvironment.itemsRequest.preferredBaseUnit;
		SET salesUnit = Environment.Variables.getItemsRequestEnviroment.itemsRequest.preferredSalesUnit;
		
		IF skuRef IS NOT NULL THEN
			DECLARE preferredRef REFERENCE TO CACHE.preferredDataCache.{skuRef}.Preferred.preferredSalesUnit;
			MOVE preferredRef FIRSTCHILD;
			WHILE LASTMOVE(preferredRef) DO
				IF preferredRef.ALUN = salesUnit THEN
			 		SET Environment.Variables.Preferred.preferredSalesUnit = preferredRef.ALUN;
				END IF;
				MOVE preferredRef NEXTSIBLING;
			END WHILE;
		ELSE
			DECLARE itemRef REFERENCE TO CACHE.preferredDataCache;
			MOVE itemRef FIRSTCHILD;
			WHILE LASTMOVE(itemRef) DO
				DECLARE salespreferredRef REFERENCE TO itemRef.Preferred.preferredSalesUnit;
				MOVE salespreferredRef FIRSTCHILD NAME 'Unit';
				WHILE LASTMOVE(salespreferredRef) DO
					IF salespreferredRef.ALUN = salesUnit THEN
						SET Environment.Variables.Preferred.preferredSalesUnit.{salespreferredRef.ITNO}.ITNO = salespreferredRef.ITNO;
						SET Environment.Variables.Preferred.preferredSalesUnit.{salespreferredRef.ITNO}.ALUN = salespreferredRef.ALUN; 
					END IF;
					MOVE salespreferredRef NEXTSIBLING REPEAT NAME;
				END WHILE;
				MOVE itemRef NEXTSIBLING;
			END WHILE;
		END IF;
		
		RETURN TRUE;
	END;
END MODULE;
